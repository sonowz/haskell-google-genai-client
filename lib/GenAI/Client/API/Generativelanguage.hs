{-
   Generative Language API

   The Gemini API allows developers to build generative AI applications using Gemini models. Gemini is our most capable model, built from the ground up to be multimodal. It can generalize and seamlessly understand, operate across, and combine different types of information including language, images, audio, video, and code. You can use the Gemini API for use cases like reasoning across text and images, content generation, dialogue agents, summarization and classification systems, and more.

   OpenAPI Version: 3.0.3
   Generative Language API API version: v1beta
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

{- |
Module : GenAI.Client.API.Generativelanguage
-}
module GenAI.Client.API.Generativelanguage where

import GenAI.Client.Core
import GenAI.Client.MimeTypes
import GenAI.Client.Model as M

import Data.Aeson qualified as A
import Data.ByteString qualified as B
import Data.ByteString.Lazy qualified as BL
import Data.Data qualified as P (TypeRep, Typeable, typeOf, typeRep)
import Data.Foldable qualified as P
import Data.Map qualified as Map
import Data.Maybe qualified as P
import Data.Proxy qualified as P (Proxy (..))
import Data.Set qualified as Set
import Data.String qualified as P
import Data.Text qualified as T
import Data.Text.Encoding qualified as T
import Data.Text.Lazy qualified as TL
import Data.Text.Lazy.Encoding qualified as TL
import Data.Time qualified as TI
import Network.HTTP.Client.MultipartFormData qualified as NH
import Network.HTTP.Media qualified as ME
import Network.HTTP.Types qualified as NH
import Web.FormUrlEncoded qualified as WH
import Web.HttpApiData qualified as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude (Applicative, Bool (..), Char, Double, FilePath, Float, Functor, Int, Integer, Maybe (..), Monad, String, fmap, maybe, mempty, pure, undefined, ($), (.), (/=), (<$>), (<*>), (==), (>>=))
import Prelude qualified as P

-- * Operations

-- ** Generativelanguage

-- *** batchCreateChunks

{- | @POST \/v1beta\/corpora\/{corpus}\/documents\/{document}\/chunks:batchCreate@

Batch create `Chunk`s.
-}
batchCreateChunks ::
  (Consumes BatchCreateChunks MimeJSON) =>
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "document" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Document2 ->
  ClientRequest BatchCreateChunks MimeJSON BatchCreateChunksResponse MimeJSON
batchCreateChunks (Corpus2 corpus) (Document2 document) =
  _mkRequest "POST" ["/v1beta/corpora/", toPath corpus, "/documents/", toPath document, "/chunks:batchCreate"]

data BatchCreateChunks

-- | /Body Param/ "BatchCreateChunksRequest" - The request body.
instance HasBodyParam BatchCreateChunks BatchCreateChunksRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam BatchCreateChunks Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam BatchCreateChunks Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam BatchCreateChunks PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam BatchCreateChunks Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes BatchCreateChunks MimeJSON

-- | @application/json@
instance Produces BatchCreateChunks MimeJSON

-- *** batchDeleteChunks

{- | @POST \/v1beta\/corpora\/{corpus}\/documents\/{document}\/chunks:batchDelete@

Batch delete `Chunk`s.
-}
batchDeleteChunks ::
  (Consumes BatchDeleteChunks MimeJSON) =>
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "document" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Document2 ->
  ClientRequest BatchDeleteChunks MimeJSON A.Value MimeJSON
batchDeleteChunks (Corpus2 corpus) (Document2 document) =
  _mkRequest "POST" ["/v1beta/corpora/", toPath corpus, "/documents/", toPath document, "/chunks:batchDelete"]

data BatchDeleteChunks

-- | /Body Param/ "BatchDeleteChunksRequest" - The request body.
instance HasBodyParam BatchDeleteChunks BatchDeleteChunksRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam BatchDeleteChunks Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam BatchDeleteChunks Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam BatchDeleteChunks PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam BatchDeleteChunks Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes BatchDeleteChunks MimeJSON

-- | @application/json@
instance Produces BatchDeleteChunks MimeJSON

-- *** batchEmbedContents

{- | @POST \/v1beta\/models\/{model}:batchEmbedContents@

Generates multiple embedding vectors from the input `Content` which consists of a batch of strings represented as `EmbedContentRequest` objects.
-}
batchEmbedContents ::
  (Consumes BatchEmbedContents MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest BatchEmbedContents MimeJSON BatchEmbedContentsResponse MimeJSON
batchEmbedContents (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":batchEmbedContents"]

data BatchEmbedContents

-- | /Body Param/ "BatchEmbedContentsRequest" - The request body.
instance HasBodyParam BatchEmbedContents BatchEmbedContentsRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam BatchEmbedContents Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam BatchEmbedContents Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam BatchEmbedContents PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam BatchEmbedContents Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes BatchEmbedContents MimeJSON

-- | @application/json@
instance Produces BatchEmbedContents MimeJSON

-- *** batchEmbedText

{- | @POST \/v1beta\/models\/{model}:batchEmbedText@

Generates multiple embeddings from the model given input text in a synchronous call.
-}
batchEmbedText ::
  (Consumes BatchEmbedText MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest BatchEmbedText MimeJSON BatchEmbedTextResponse MimeJSON
batchEmbedText (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":batchEmbedText"]

data BatchEmbedText

-- | /Body Param/ "BatchEmbedTextRequest" - The request body.
instance HasBodyParam BatchEmbedText BatchEmbedTextRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam BatchEmbedText Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam BatchEmbedText Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam BatchEmbedText PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam BatchEmbedText Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes BatchEmbedText MimeJSON

-- | @application/json@
instance Produces BatchEmbedText MimeJSON

-- *** batchUpdateChunks

{- | @POST \/v1beta\/corpora\/{corpus}\/documents\/{document}\/chunks:batchUpdate@

Batch update `Chunk`s.
-}
batchUpdateChunks ::
  (Consumes BatchUpdateChunks MimeJSON) =>
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "document" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Document2 ->
  ClientRequest BatchUpdateChunks MimeJSON BatchUpdateChunksResponse MimeJSON
batchUpdateChunks (Corpus2 corpus) (Document2 document) =
  _mkRequest "POST" ["/v1beta/corpora/", toPath corpus, "/documents/", toPath document, "/chunks:batchUpdate"]

data BatchUpdateChunks

-- | /Body Param/ "BatchUpdateChunksRequest" - The request body.
instance HasBodyParam BatchUpdateChunks BatchUpdateChunksRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam BatchUpdateChunks Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam BatchUpdateChunks Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam BatchUpdateChunks PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam BatchUpdateChunks Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes BatchUpdateChunks MimeJSON

-- | @application/json@
instance Produces BatchUpdateChunks MimeJSON

-- *** cancelOperation

{- | @POST \/v1beta\/batches\/{generateContentBatch}:cancel@

Starts asynchronous cancellation on a long-running operation.  The server makes a best effort to cancel the operation, but success is not guaranteed.  If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.
-}
cancelOperation ::
  -- | "generateContentBatch" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  GenerateContentBatch ->
  ClientRequest CancelOperation MimeNoContent A.Value MimeJSON
cancelOperation (GenerateContentBatch generateContentBatch) =
  _mkRequest "POST" ["/v1beta/batches/", toPath generateContentBatch, ":cancel"]

data CancelOperation

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam CancelOperation Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam CancelOperation Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam CancelOperation PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam CancelOperation Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces CancelOperation MimeJSON

-- *** countMessageTokens

{- | @POST \/v1beta\/models\/{model}:countMessageTokens@

Runs a model's tokenizer on a string and returns the token count.
-}
countMessageTokens ::
  (Consumes CountMessageTokens MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest CountMessageTokens MimeJSON CountMessageTokensResponse MimeJSON
countMessageTokens (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":countMessageTokens"]

data CountMessageTokens

-- | /Body Param/ "CountMessageTokensRequest" - The request body.
instance HasBodyParam CountMessageTokens CountMessageTokensRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam CountMessageTokens Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam CountMessageTokens Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam CountMessageTokens PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam CountMessageTokens Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes CountMessageTokens MimeJSON

-- | @application/json@
instance Produces CountMessageTokens MimeJSON

-- *** countTextTokens

{- | @POST \/v1beta\/models\/{model}:countTextTokens@

Runs a model's tokenizer on a text and returns the token count.
-}
countTextTokens ::
  (Consumes CountTextTokens MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest CountTextTokens MimeJSON CountTextTokensResponse MimeJSON
countTextTokens (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":countTextTokens"]

data CountTextTokens

-- | /Body Param/ "CountTextTokensRequest" - The request body.
instance HasBodyParam CountTextTokens CountTextTokensRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam CountTextTokens Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam CountTextTokens Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam CountTextTokens PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam CountTextTokens Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes CountTextTokens MimeJSON

-- | @application/json@
instance Produces CountTextTokens MimeJSON

-- *** countTokens

{- | @POST \/v1beta\/models\/{model}:countTokens@

Runs a model's tokenizer on input `Content` and returns the token count. Refer to the [tokens guide](https://ai.google.dev/gemini-api/docs/tokens) to learn more about tokens.
-}
countTokens ::
  (Consumes CountTokens MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest CountTokens MimeJSON CountTokensResponse MimeJSON
countTokens (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":countTokens"]

data CountTokens

-- | /Body Param/ "CountTokensRequest" - The request body.
instance HasBodyParam CountTokens CountTokensRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam CountTokens Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam CountTokens Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam CountTokens PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam CountTokens Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes CountTokens MimeJSON

-- | @application/json@
instance Produces CountTokens MimeJSON

-- *** createCachedContent

{- | @POST \/v1beta\/cachedContents@

Creates CachedContent resource.
-}
createCachedContent ::
  (Consumes CreateCachedContent MimeJSON) =>
  ClientRequest CreateCachedContent MimeJSON CachedContent MimeJSON
createCachedContent =
  _mkRequest "POST" ["/v1beta/cachedContents"]

data CreateCachedContent

-- | /Body Param/ "CachedContent" - Required. The cached content to create.
instance HasBodyParam CreateCachedContent CachedContent

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam CreateCachedContent Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam CreateCachedContent Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam CreateCachedContent PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam CreateCachedContent Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes CreateCachedContent MimeJSON

-- | @application/json@
instance Produces CreateCachedContent MimeJSON

-- *** createChunk

{- | @POST \/v1beta\/corpora\/{corpus}\/documents\/{document}\/chunks@

Creates a `Chunk`.
-}
createChunk ::
  (Consumes CreateChunk MimeJSON) =>
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "document" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Document2 ->
  ClientRequest CreateChunk MimeJSON Chunk MimeJSON
createChunk (Corpus2 corpus) (Document2 document) =
  _mkRequest "POST" ["/v1beta/corpora/", toPath corpus, "/documents/", toPath document, "/chunks"]

data CreateChunk

-- | /Body Param/ "Chunk" - Required. The `Chunk` to create.
instance HasBodyParam CreateChunk Chunk

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam CreateChunk Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam CreateChunk Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam CreateChunk PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam CreateChunk Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes CreateChunk MimeJSON

-- | @application/json@
instance Produces CreateChunk MimeJSON

-- *** createCorpus

{- | @POST \/v1beta\/corpora@

Creates an empty `Corpus`.
-}
createCorpus ::
  (Consumes CreateCorpus MimeJSON) =>
  ClientRequest CreateCorpus MimeJSON Corpus MimeJSON
createCorpus =
  _mkRequest "POST" ["/v1beta/corpora"]

data CreateCorpus

-- | /Body Param/ "Corpus" - Required. The `Corpus` to create.
instance HasBodyParam CreateCorpus Corpus

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam CreateCorpus Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam CreateCorpus Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam CreateCorpus PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam CreateCorpus Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes CreateCorpus MimeJSON

-- | @application/json@
instance Produces CreateCorpus MimeJSON

-- *** createDocument

{- | @POST \/v1beta\/corpora\/{corpus}\/documents@

Creates an empty `Document`.
-}
createDocument ::
  (Consumes CreateDocument MimeJSON) =>
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  ClientRequest CreateDocument MimeJSON Document MimeJSON
createDocument (Corpus2 corpus) =
  _mkRequest "POST" ["/v1beta/corpora/", toPath corpus, "/documents"]

data CreateDocument

-- | /Body Param/ "Document" - Required. The `Document` to create.
instance HasBodyParam CreateDocument Document

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam CreateDocument Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam CreateDocument Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam CreateDocument PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam CreateDocument Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes CreateDocument MimeJSON

-- | @application/json@
instance Produces CreateDocument MimeJSON

-- *** createFile

{- | @POST \/v1beta\/files@

Creates a `File`.
-}
createFile ::
  (Consumes CreateFile MimeJSON) =>
  ClientRequest CreateFile MimeJSON CreateFileResponse MimeJSON
createFile =
  _mkRequest "POST" ["/v1beta/files"]

data CreateFile

-- | /Body Param/ "CreateFileRequest" - The request body.
instance HasBodyParam CreateFile CreateFileRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam CreateFile Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam CreateFile Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam CreateFile PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam CreateFile Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes CreateFile MimeJSON

-- | @application/json@
instance Produces CreateFile MimeJSON

-- *** createPermission

{- | @POST \/v1beta\/tunedModels\/{tunedModel}\/permissions@

Create a permission to a specific resource.
-}
createPermission ::
  (Consumes CreatePermission MimeJSON) =>
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  ClientRequest CreatePermission MimeJSON Permission MimeJSON
createPermission (TunedModel2 tunedModel) =
  _mkRequest "POST" ["/v1beta/tunedModels/", toPath tunedModel, "/permissions"]

data CreatePermission

-- | /Body Param/ "Permission" - Required. The permission to create.
instance HasBodyParam CreatePermission Permission

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam CreatePermission Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam CreatePermission Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam CreatePermission PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam CreatePermission Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes CreatePermission MimeJSON

-- | @application/json@
instance Produces CreatePermission MimeJSON

-- *** createPermissionByCorpus

{- | @POST \/v1beta\/corpora\/{corpus}\/permissions@

Create a permission to a specific resource.
-}
createPermissionByCorpus ::
  (Consumes CreatePermissionByCorpus MimeJSON) =>
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  ClientRequest CreatePermissionByCorpus MimeJSON Permission MimeJSON
createPermissionByCorpus (Corpus2 corpus) =
  _mkRequest "POST" ["/v1beta/corpora/", toPath corpus, "/permissions"]

data CreatePermissionByCorpus

-- | /Body Param/ "Permission" - Required. The permission to create.
instance HasBodyParam CreatePermissionByCorpus Permission

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam CreatePermissionByCorpus Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam CreatePermissionByCorpus Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam CreatePermissionByCorpus PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam CreatePermissionByCorpus Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes CreatePermissionByCorpus MimeJSON

-- | @application/json@
instance Produces CreatePermissionByCorpus MimeJSON

-- *** createTunedModel

{- | @POST \/v1beta\/tunedModels@

Creates a tuned model. Check intermediate tuning progress (if any) through the [google.longrunning.Operations] service.  Access status and results through the Operations service. Example:   GET /v1/tunedModels/az2mb0bpw6i/operations/000-111-222
-}
createTunedModel ::
  (Consumes CreateTunedModel MimeJSON) =>
  ClientRequest CreateTunedModel MimeJSON CreateTunedModelOperation MimeJSON
createTunedModel =
  _mkRequest "POST" ["/v1beta/tunedModels"]

data CreateTunedModel

-- | /Body Param/ "TunedModel" - Required. The tuned model to create.
instance HasBodyParam CreateTunedModel TunedModel

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam CreateTunedModel Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam CreateTunedModel Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam CreateTunedModel PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam CreateTunedModel Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "tunedModelId" - Optional. The unique id for the tuned model if specified. This value should be up to 40 characters, the first character must be a letter, the last could be a letter or a number. The id must match the regular expression: `[a-z]([a-z0-9-]{0,38}[a-z0-9])?`.
instance HasOptionalParam CreateTunedModel TunedModelId where
  applyOptionalParam req (TunedModelId xs) =
    req `addQuery` toQuery ("tunedModelId", Just xs)

-- | @application/json@
instance Consumes CreateTunedModel MimeJSON

-- | @application/json@
instance Produces CreateTunedModel MimeJSON

-- *** deleteCachedContent

{- | @DELETE \/v1beta\/cachedContents\/{id}@

Deletes CachedContent resource.
-}
deleteCachedContent ::
  -- | "id" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Id ->
  ClientRequest DeleteCachedContent MimeNoContent A.Value MimeJSON
deleteCachedContent (Id id) =
  _mkRequest "DELETE" ["/v1beta/cachedContents/", toPath id]

data DeleteCachedContent

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam DeleteCachedContent Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam DeleteCachedContent Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam DeleteCachedContent PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam DeleteCachedContent Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces DeleteCachedContent MimeJSON

-- *** deleteChunk

{- | @DELETE \/v1beta\/corpora\/{corpus}\/documents\/{document}\/chunks\/{chunk}@

Deletes a `Chunk`.
-}
deleteChunk ::
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "document" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Document2 ->
  -- | "chunk" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Chunk2 ->
  ClientRequest DeleteChunk MimeNoContent A.Value MimeJSON
deleteChunk (Corpus2 corpus) (Document2 document) (Chunk2 chunk) =
  _mkRequest "DELETE" ["/v1beta/corpora/", toPath corpus, "/documents/", toPath document, "/chunks/", toPath chunk]

data DeleteChunk

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam DeleteChunk Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam DeleteChunk Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam DeleteChunk PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam DeleteChunk Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces DeleteChunk MimeJSON

-- *** deleteCorpus

{- | @DELETE \/v1beta\/corpora\/{corpus}@

Deletes a `Corpus`.
-}
deleteCorpus ::
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  ClientRequest DeleteCorpus MimeNoContent A.Value MimeJSON
deleteCorpus (Corpus2 corpus) =
  _mkRequest "DELETE" ["/v1beta/corpora/", toPath corpus]

data DeleteCorpus

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam DeleteCorpus Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam DeleteCorpus Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam DeleteCorpus PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam DeleteCorpus Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "force" - Optional. If set to true, any `Document`s and objects related to this `Corpus` will also be deleted.  If false (the default), a `FAILED_PRECONDITION` error will be returned if `Corpus` contains any `Document`s.
instance HasOptionalParam DeleteCorpus Force where
  applyOptionalParam req (Force xs) =
    req `addQuery` toQuery ("force", Just xs)

-- | @application/json@
instance Produces DeleteCorpus MimeJSON

-- *** deleteDocument

{- | @DELETE \/v1beta\/corpora\/{corpus}\/documents\/{document}@

Deletes a `Document`.
-}
deleteDocument ::
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "document" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Document2 ->
  ClientRequest DeleteDocument MimeNoContent A.Value MimeJSON
deleteDocument (Corpus2 corpus) (Document2 document) =
  _mkRequest "DELETE" ["/v1beta/corpora/", toPath corpus, "/documents/", toPath document]

data DeleteDocument

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam DeleteDocument Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam DeleteDocument Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam DeleteDocument PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam DeleteDocument Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "force" - Optional. If set to true, any `Chunk`s and objects related to this `Document` will also be deleted.  If false (the default), a `FAILED_PRECONDITION` error will be returned if `Document` contains any `Chunk`s.
instance HasOptionalParam DeleteDocument Force where
  applyOptionalParam req (Force xs) =
    req `addQuery` toQuery ("force", Just xs)

-- | @application/json@
instance Produces DeleteDocument MimeJSON

-- *** deleteFile

{- | @DELETE \/v1beta\/files\/{file}@

Deletes the `File`.
-}
deleteFile ::
  -- | "file" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  File2 ->
  ClientRequest DeleteFile MimeNoContent A.Value MimeJSON
deleteFile (File2 file) =
  _mkRequest "DELETE" ["/v1beta/files/", toPath file]

data DeleteFile

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam DeleteFile Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam DeleteFile Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam DeleteFile PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam DeleteFile Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces DeleteFile MimeJSON

-- *** deletePermission

{- | @DELETE \/v1beta\/tunedModels\/{tunedModel}\/permissions\/{permission}@

Deletes the permission.
-}
deletePermission ::
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  -- | "permission" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Permission2 ->
  ClientRequest DeletePermission MimeNoContent A.Value MimeJSON
deletePermission (TunedModel2 tunedModel) (Permission2 permission) =
  _mkRequest "DELETE" ["/v1beta/tunedModels/", toPath tunedModel, "/permissions/", toPath permission]

data DeletePermission

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam DeletePermission Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam DeletePermission Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam DeletePermission PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam DeletePermission Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces DeletePermission MimeJSON

-- *** deletePermissionByCorpusAndPermission

{- | @DELETE \/v1beta\/corpora\/{corpus}\/permissions\/{permission}@

Deletes the permission.
-}
deletePermissionByCorpusAndPermission ::
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "permission" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Permission2 ->
  ClientRequest DeletePermissionByCorpusAndPermission MimeNoContent A.Value MimeJSON
deletePermissionByCorpusAndPermission (Corpus2 corpus) (Permission2 permission) =
  _mkRequest "DELETE" ["/v1beta/corpora/", toPath corpus, "/permissions/", toPath permission]

data DeletePermissionByCorpusAndPermission

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam DeletePermissionByCorpusAndPermission Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam DeletePermissionByCorpusAndPermission Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam DeletePermissionByCorpusAndPermission PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam DeletePermissionByCorpusAndPermission Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces DeletePermissionByCorpusAndPermission MimeJSON

-- *** deleteTunedModel

{- | @DELETE \/v1beta\/tunedModels\/{tunedModel}@

Deletes a tuned model.
-}
deleteTunedModel ::
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  ClientRequest DeleteTunedModel MimeNoContent A.Value MimeJSON
deleteTunedModel (TunedModel2 tunedModel) =
  _mkRequest "DELETE" ["/v1beta/tunedModels/", toPath tunedModel]

data DeleteTunedModel

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam DeleteTunedModel Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam DeleteTunedModel Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam DeleteTunedModel PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam DeleteTunedModel Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces DeleteTunedModel MimeJSON

-- *** downloadFile

{- | @GET \/v1beta\/files\/{file}:download@

Download the `File`.
-}
downloadFile ::
  -- | "file" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  File2 ->
  ClientRequest DownloadFile MimeNoContent A.Value MimeJSON
downloadFile (File2 file) =
  _mkRequest "GET" ["/v1beta/files/", toPath file, ":download"]

data DownloadFile

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam DownloadFile Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam DownloadFile Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam DownloadFile PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam DownloadFile Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces DownloadFile MimeJSON

-- *** embedContent

{- | @POST \/v1beta\/models\/{model}:embedContent@

Generates a text embedding vector from the input `Content` using the specified [Gemini Embedding model](https://ai.google.dev/gemini-api/docs/models/gemini#text-embedding).
-}
embedContent ::
  (Consumes EmbedContent MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest EmbedContent MimeJSON EmbedContentResponse MimeJSON
embedContent (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":embedContent"]

data EmbedContent

-- | /Body Param/ "EmbedContentRequest" - The request body.
instance HasBodyParam EmbedContent EmbedContentRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam EmbedContent Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam EmbedContent Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam EmbedContent PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam EmbedContent Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes EmbedContent MimeJSON

-- | @application/json@
instance Produces EmbedContent MimeJSON

-- *** embedText

{- | @POST \/v1beta\/models\/{model}:embedText@

Generates an embedding from the model given an input message.
-}
embedText ::
  (Consumes EmbedText MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest EmbedText MimeJSON EmbedTextResponse MimeJSON
embedText (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":embedText"]

data EmbedText

-- | /Body Param/ "EmbedTextRequest" - The request body.
instance HasBodyParam EmbedText EmbedTextRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam EmbedText Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam EmbedText Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam EmbedText PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam EmbedText Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes EmbedText MimeJSON

-- | @application/json@
instance Produces EmbedText MimeJSON

-- *** generateAnswer

{- | @POST \/v1beta\/models\/{model}:generateAnswer@

Generates a grounded answer from the model given an input `GenerateAnswerRequest`.
-}
generateAnswer ::
  (Consumes GenerateAnswer MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest GenerateAnswer MimeJSON GenerateAnswerResponse MimeJSON
generateAnswer (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":generateAnswer"]

data GenerateAnswer

-- | /Body Param/ "GenerateAnswerRequest" - The request body.
instance HasBodyParam GenerateAnswer GenerateAnswerRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GenerateAnswer Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GenerateAnswer Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GenerateAnswer PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GenerateAnswer Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes GenerateAnswer MimeJSON

-- | @application/json@
instance Produces GenerateAnswer MimeJSON

-- *** generateContent

{- | @POST \/v1beta\/models\/{model}:generateContent@

Generates a model response given an input `GenerateContentRequest`. Refer to the [text generation guide](https://ai.google.dev/gemini-api/docs/text-generation) for detailed usage information. Input capabilities differ between models, including tuned models. Refer to the [model guide](https://ai.google.dev/gemini-api/docs/models/gemini) and [tuning guide](https://ai.google.dev/gemini-api/docs/model-tuning) for details.
-}
generateContent ::
  (Consumes GenerateContent MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest GenerateContent MimeJSON GenerateContentResponse MimeJSON
generateContent (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":generateContent"]

data GenerateContent

-- | /Body Param/ "GenerateContentRequest" - The request body.
instance HasBodyParam GenerateContent GenerateContentRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GenerateContent Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GenerateContent Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GenerateContent PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GenerateContent Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes GenerateContent MimeJSON

-- | @application/json@
instance Produces GenerateContent MimeJSON

-- *** generateContentByDynamicId

{- | @POST \/v1beta\/dynamic\/{dynamicId}:generateContent@

Generates a model response given an input `GenerateContentRequest`. Refer to the [text generation guide](https://ai.google.dev/gemini-api/docs/text-generation) for detailed usage information. Input capabilities differ between models, including tuned models. Refer to the [model guide](https://ai.google.dev/gemini-api/docs/models/gemini) and [tuning guide](https://ai.google.dev/gemini-api/docs/model-tuning) for details.
-}
generateContentByDynamicId ::
  (Consumes GenerateContentByDynamicId MimeJSON) =>
  -- | "dynamicId" -  Part of `model`. Required. The name of the `Model` to use for generating the completion.  Format: `models/{model}`.
  DynamicId ->
  ClientRequest GenerateContentByDynamicId MimeJSON GenerateContentResponse MimeJSON
generateContentByDynamicId (DynamicId dynamicId) =
  _mkRequest "POST" ["/v1beta/dynamic/", toPath dynamicId, ":generateContent"]

data GenerateContentByDynamicId

-- | /Body Param/ "GenerateContentRequest" - The request body.
instance HasBodyParam GenerateContentByDynamicId GenerateContentRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GenerateContentByDynamicId Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GenerateContentByDynamicId Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GenerateContentByDynamicId PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GenerateContentByDynamicId Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes GenerateContentByDynamicId MimeJSON

-- | @application/json@
instance Produces GenerateContentByDynamicId MimeJSON

-- *** generateContentByTunedModel

{- | @POST \/v1beta\/tunedModels\/{tunedModel}:generateContent@

Generates a model response given an input `GenerateContentRequest`. Refer to the [text generation guide](https://ai.google.dev/gemini-api/docs/text-generation) for detailed usage information. Input capabilities differ between models, including tuned models. Refer to the [model guide](https://ai.google.dev/gemini-api/docs/models/gemini) and [tuning guide](https://ai.google.dev/gemini-api/docs/model-tuning) for details.
-}
generateContentByTunedModel ::
  (Consumes GenerateContentByTunedModel MimeJSON) =>
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  ClientRequest GenerateContentByTunedModel MimeJSON GenerateContentResponse MimeJSON
generateContentByTunedModel (TunedModel2 tunedModel) =
  _mkRequest "POST" ["/v1beta/tunedModels/", toPath tunedModel, ":generateContent"]

data GenerateContentByTunedModel

-- | /Body Param/ "GenerateContentRequest" - The request body.
instance HasBodyParam GenerateContentByTunedModel GenerateContentRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GenerateContentByTunedModel Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GenerateContentByTunedModel Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GenerateContentByTunedModel PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GenerateContentByTunedModel Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes GenerateContentByTunedModel MimeJSON

-- | @application/json@
instance Produces GenerateContentByTunedModel MimeJSON

-- *** generateMessage

{- | @POST \/v1beta\/models\/{model}:generateMessage@

Generates a response from the model given an input `MessagePrompt`.
-}
generateMessage ::
  (Consumes GenerateMessage MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest GenerateMessage MimeJSON GenerateMessageResponse MimeJSON
generateMessage (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":generateMessage"]

data GenerateMessage

-- | /Body Param/ "GenerateMessageRequest" - The request body.
instance HasBodyParam GenerateMessage GenerateMessageRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GenerateMessage Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GenerateMessage Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GenerateMessage PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GenerateMessage Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes GenerateMessage MimeJSON

-- | @application/json@
instance Produces GenerateMessage MimeJSON

-- *** generateText

{- | @POST \/v1beta\/models\/{model}:generateText@

Generates a response from the model given an input message.
-}
generateText ::
  (Consumes GenerateText MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest GenerateText MimeJSON GenerateTextResponse MimeJSON
generateText (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":generateText"]

data GenerateText

-- | /Body Param/ "GenerateTextRequest" - The request body.
instance HasBodyParam GenerateText GenerateTextRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GenerateText Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GenerateText Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GenerateText PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GenerateText Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes GenerateText MimeJSON

-- | @application/json@
instance Produces GenerateText MimeJSON

-- *** generateTextByTunedModel

{- | @POST \/v1beta\/tunedModels\/{tunedModel}:generateText@

Generates a response from the model given an input message.
-}
generateTextByTunedModel ::
  (Consumes GenerateTextByTunedModel MimeJSON) =>
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  ClientRequest GenerateTextByTunedModel MimeJSON GenerateTextResponse MimeJSON
generateTextByTunedModel (TunedModel2 tunedModel) =
  _mkRequest "POST" ["/v1beta/tunedModels/", toPath tunedModel, ":generateText"]

data GenerateTextByTunedModel

-- | /Body Param/ "GenerateTextRequest" - The request body.
instance HasBodyParam GenerateTextByTunedModel GenerateTextRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GenerateTextByTunedModel Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GenerateTextByTunedModel Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GenerateTextByTunedModel PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GenerateTextByTunedModel Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes GenerateTextByTunedModel MimeJSON

-- | @application/json@
instance Produces GenerateTextByTunedModel MimeJSON

-- *** getCachedContent

{- | @GET \/v1beta\/cachedContents\/{id}@

Reads CachedContent resource.
-}
getCachedContent ::
  -- | "id" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Id ->
  ClientRequest GetCachedContent MimeNoContent CachedContent MimeJSON
getCachedContent (Id id) =
  _mkRequest "GET" ["/v1beta/cachedContents/", toPath id]

data GetCachedContent

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetCachedContent Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetCachedContent Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetCachedContent PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetCachedContent Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetCachedContent MimeJSON

-- *** getChunk

{- | @GET \/v1beta\/corpora\/{corpus}\/documents\/{document}\/chunks\/{chunk}@

Gets information about a specific `Chunk`.
-}
getChunk ::
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "document" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Document2 ->
  -- | "chunk" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Chunk2 ->
  ClientRequest GetChunk MimeNoContent Chunk MimeJSON
getChunk (Corpus2 corpus) (Document2 document) (Chunk2 chunk) =
  _mkRequest "GET" ["/v1beta/corpora/", toPath corpus, "/documents/", toPath document, "/chunks/", toPath chunk]

data GetChunk

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetChunk Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetChunk Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetChunk PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetChunk Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetChunk MimeJSON

-- *** getCorpus

{- | @GET \/v1beta\/corpora\/{corpus}@

Gets information about a specific `Corpus`.
-}
getCorpus ::
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  ClientRequest GetCorpus MimeNoContent Corpus MimeJSON
getCorpus (Corpus2 corpus) =
  _mkRequest "GET" ["/v1beta/corpora/", toPath corpus]

data GetCorpus

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetCorpus Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetCorpus Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetCorpus PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetCorpus Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetCorpus MimeJSON

-- *** getDocument

{- | @GET \/v1beta\/corpora\/{corpus}\/documents\/{document}@

Gets information about a specific `Document`.
-}
getDocument ::
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "document" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Document2 ->
  ClientRequest GetDocument MimeNoContent Document MimeJSON
getDocument (Corpus2 corpus) (Document2 document) =
  _mkRequest "GET" ["/v1beta/corpora/", toPath corpus, "/documents/", toPath document]

data GetDocument

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetDocument Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetDocument Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetDocument PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetDocument Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetDocument MimeJSON

-- *** getFile

{- | @GET \/v1beta\/files\/{file}@

Gets the metadata for the given `File`.
-}
getFile ::
  -- | "file" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  File2 ->
  ClientRequest GetFile MimeNoContent File MimeJSON
getFile (File2 file) =
  _mkRequest "GET" ["/v1beta/files/", toPath file]

data GetFile

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetFile Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetFile Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetFile PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetFile Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetFile MimeJSON

-- *** getGeneratedFile

{- | @GET \/v1beta\/generatedFiles\/{generatedFile}@

Gets a generated file. When calling this method via REST, only the metadata of the generated file is returned. To retrieve the file content via REST, add alt=media as a query parameter.
-}
getGeneratedFile ::
  -- | "generatedFile" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  GeneratedFile2 ->
  ClientRequest GetGeneratedFile MimeNoContent GeneratedFile MimeJSON
getGeneratedFile (GeneratedFile2 generatedFile) =
  _mkRequest "GET" ["/v1beta/generatedFiles/", toPath generatedFile]

data GetGeneratedFile

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetGeneratedFile Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetGeneratedFile Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetGeneratedFile PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetGeneratedFile Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetGeneratedFile MimeJSON

-- *** getModel

{- | @GET \/v1beta\/models\/{model}@

Gets information about a specific `Model` such as its version number, token limits, [parameters](https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters) and other metadata. Refer to the [Gemini models guide](https://ai.google.dev/gemini-api/docs/models/gemini) for detailed model information.
-}
getModel ::
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest GetModel MimeNoContent Model MimeJSON
getModel (Model2 model) =
  _mkRequest "GET" ["/v1beta/models/", toPath model]

data GetModel

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetModel Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetModel Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetModel PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetModel Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetModel MimeJSON

-- *** getOperation

{- | @GET \/v1beta\/tunedModels\/{tunedModel}\/operations\/{operation}@

Gets the latest state of a long-running operation.  Clients can use this method to poll the operation result at intervals as recommended by the API service.
-}
getOperation ::
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  -- | "operation" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Operation2 ->
  ClientRequest GetOperation MimeNoContent Operation MimeJSON
getOperation (TunedModel2 tunedModel) (Operation2 operation) =
  _mkRequest "GET" ["/v1beta/tunedModels/", toPath tunedModel, "/operations/", toPath operation]

data GetOperation

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetOperation Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetOperation Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetOperation PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetOperation Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetOperation MimeJSON

-- *** getOperationByGenerateContentBatch

{- | @GET \/v1beta\/batches\/{generateContentBatch}@

Gets the latest state of a long-running operation.  Clients can use this method to poll the operation result at intervals as recommended by the API service.
-}
getOperationByGenerateContentBatch ::
  -- | "generateContentBatch" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  GenerateContentBatch ->
  ClientRequest GetOperationByGenerateContentBatch MimeNoContent Operation MimeJSON
getOperationByGenerateContentBatch (GenerateContentBatch generateContentBatch) =
  _mkRequest "GET" ["/v1beta/batches/", toPath generateContentBatch]

data GetOperationByGenerateContentBatch

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetOperationByGenerateContentBatch Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetOperationByGenerateContentBatch Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetOperationByGenerateContentBatch PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetOperationByGenerateContentBatch Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetOperationByGenerateContentBatch MimeJSON

-- *** getOperationByGeneratedFileAndOperation

{- | @GET \/v1beta\/generatedFiles\/{generatedFile}\/operations\/{operation}@

Gets the latest state of a long-running operation.  Clients can use this method to poll the operation result at intervals as recommended by the API service.
-}
getOperationByGeneratedFileAndOperation ::
  -- | "generatedFile" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  GeneratedFile2 ->
  -- | "operation" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Operation2 ->
  ClientRequest GetOperationByGeneratedFileAndOperation MimeNoContent Operation MimeJSON
getOperationByGeneratedFileAndOperation (GeneratedFile2 generatedFile) (Operation2 operation) =
  _mkRequest "GET" ["/v1beta/generatedFiles/", toPath generatedFile, "/operations/", toPath operation]

data GetOperationByGeneratedFileAndOperation

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetOperationByGeneratedFileAndOperation Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetOperationByGeneratedFileAndOperation Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetOperationByGeneratedFileAndOperation PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetOperationByGeneratedFileAndOperation Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetOperationByGeneratedFileAndOperation MimeJSON

-- *** getOperationByModelAndOperation

{- | @GET \/v1beta\/models\/{model}\/operations\/{operation}@

Gets the latest state of a long-running operation.  Clients can use this method to poll the operation result at intervals as recommended by the API service.
-}
getOperationByModelAndOperation ::
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  -- | "operation" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Operation2 ->
  ClientRequest GetOperationByModelAndOperation MimeNoContent Operation MimeJSON
getOperationByModelAndOperation (Model2 model) (Operation2 operation) =
  _mkRequest "GET" ["/v1beta/models/", toPath model, "/operations/", toPath operation]

data GetOperationByModelAndOperation

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetOperationByModelAndOperation Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetOperationByModelAndOperation Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetOperationByModelAndOperation PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetOperationByModelAndOperation Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetOperationByModelAndOperation MimeJSON

-- *** getPermission

{- | @GET \/v1beta\/tunedModels\/{tunedModel}\/permissions\/{permission}@

Gets information about a specific Permission.
-}
getPermission ::
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  -- | "permission" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Permission2 ->
  ClientRequest GetPermission MimeNoContent Permission MimeJSON
getPermission (TunedModel2 tunedModel) (Permission2 permission) =
  _mkRequest "GET" ["/v1beta/tunedModels/", toPath tunedModel, "/permissions/", toPath permission]

data GetPermission

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetPermission Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetPermission Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetPermission PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetPermission Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetPermission MimeJSON

-- *** getPermissionByCorpusAndPermission

{- | @GET \/v1beta\/corpora\/{corpus}\/permissions\/{permission}@

Gets information about a specific Permission.
-}
getPermissionByCorpusAndPermission ::
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "permission" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Permission2 ->
  ClientRequest GetPermissionByCorpusAndPermission MimeNoContent Permission MimeJSON
getPermissionByCorpusAndPermission (Corpus2 corpus) (Permission2 permission) =
  _mkRequest "GET" ["/v1beta/corpora/", toPath corpus, "/permissions/", toPath permission]

data GetPermissionByCorpusAndPermission

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetPermissionByCorpusAndPermission Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetPermissionByCorpusAndPermission Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetPermissionByCorpusAndPermission PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetPermissionByCorpusAndPermission Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetPermissionByCorpusAndPermission MimeJSON

-- *** getTunedModel

{- | @GET \/v1beta\/tunedModels\/{tunedModel}@

Gets information about a specific TunedModel.
-}
getTunedModel ::
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  ClientRequest GetTunedModel MimeNoContent TunedModel MimeJSON
getTunedModel (TunedModel2 tunedModel) =
  _mkRequest "GET" ["/v1beta/tunedModels/", toPath tunedModel]

data GetTunedModel

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam GetTunedModel Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam GetTunedModel Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam GetTunedModel PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam GetTunedModel Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Produces GetTunedModel MimeJSON

-- *** listCachedContents

{- | @GET \/v1beta\/cachedContents@

Lists CachedContents.
-}
listCachedContents ::
  ClientRequest ListCachedContents MimeNoContent ListCachedContentsResponse MimeJSON
listCachedContents =
  _mkRequest "GET" ["/v1beta/cachedContents"]

data ListCachedContents

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListCachedContents Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListCachedContents Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListCachedContents PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListCachedContents Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "pageSize" - Optional. The maximum number of cached contents to return. The service may return fewer than this value. If unspecified, some default (under maximum) number of items will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
instance HasOptionalParam ListCachedContents PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - Optional. A page token, received from a previous `ListCachedContents` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to `ListCachedContents` must match the call that provided the page token.
instance HasOptionalParam ListCachedContents PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | @application/json@
instance Produces ListCachedContents MimeJSON

-- *** listChunks

{- | @GET \/v1beta\/corpora\/{corpus}\/documents\/{document}\/chunks@

Lists all `Chunk`s in a `Document`.
-}
listChunks ::
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "document" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Document2 ->
  ClientRequest ListChunks MimeNoContent ListChunksResponse MimeJSON
listChunks (Corpus2 corpus) (Document2 document) =
  _mkRequest "GET" ["/v1beta/corpora/", toPath corpus, "/documents/", toPath document, "/chunks"]

data ListChunks

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListChunks Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListChunks Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListChunks PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListChunks Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "pageSize" - Optional. The maximum number of `Chunk`s to return (per page). The service may return fewer `Chunk`s.  If unspecified, at most 10 `Chunk`s will be returned. The maximum size limit is 100 `Chunk`s per page.
instance HasOptionalParam ListChunks PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - Optional. A page token, received from a previous `ListChunks` call.  Provide the `next_page_token` returned in the response as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to `ListChunks` must match the call that provided the page token.
instance HasOptionalParam ListChunks PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | @application/json@
instance Produces ListChunks MimeJSON

-- *** listCorpora

{- | @GET \/v1beta\/corpora@

Lists all `Corpora` owned by the user.
-}
listCorpora ::
  ClientRequest ListCorpora MimeNoContent ListCorporaResponse MimeJSON
listCorpora =
  _mkRequest "GET" ["/v1beta/corpora"]

data ListCorpora

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListCorpora Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListCorpora Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListCorpora PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListCorpora Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "pageSize" - Optional. The maximum number of `Corpora` to return (per page). The service may return fewer `Corpora`.  If unspecified, at most 10 `Corpora` will be returned. The maximum size limit is 20 `Corpora` per page.
instance HasOptionalParam ListCorpora PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - Optional. A page token, received from a previous `ListCorpora` call.  Provide the `next_page_token` returned in the response as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to `ListCorpora` must match the call that provided the page token.
instance HasOptionalParam ListCorpora PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | @application/json@
instance Produces ListCorpora MimeJSON

-- *** listDocuments

{- | @GET \/v1beta\/corpora\/{corpus}\/documents@

Lists all `Document`s in a `Corpus`.
-}
listDocuments ::
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  ClientRequest ListDocuments MimeNoContent ListDocumentsResponse MimeJSON
listDocuments (Corpus2 corpus) =
  _mkRequest "GET" ["/v1beta/corpora/", toPath corpus, "/documents"]

data ListDocuments

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListDocuments Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListDocuments Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListDocuments PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListDocuments Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "pageSize" - Optional. The maximum number of `Document`s to return (per page). The service may return fewer `Document`s.  If unspecified, at most 10 `Document`s will be returned. The maximum size limit is 20 `Document`s per page.
instance HasOptionalParam ListDocuments PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - Optional. A page token, received from a previous `ListDocuments` call.  Provide the `next_page_token` returned in the response as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to `ListDocuments` must match the call that provided the page token.
instance HasOptionalParam ListDocuments PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | @application/json@
instance Produces ListDocuments MimeJSON

-- *** listFiles

{- | @GET \/v1beta\/files@

Lists the metadata for `File`s owned by the requesting project.
-}
listFiles ::
  ClientRequest ListFiles MimeNoContent ListFilesResponse MimeJSON
listFiles =
  _mkRequest "GET" ["/v1beta/files"]

data ListFiles

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListFiles Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListFiles Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListFiles PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListFiles Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "pageSize" - Optional. Maximum number of `File`s to return per page. If unspecified, defaults to 10. Maximum `page_size` is 100.
instance HasOptionalParam ListFiles PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - Optional. A page token from a previous `ListFiles` call.
instance HasOptionalParam ListFiles PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | @application/json@
instance Produces ListFiles MimeJSON

-- *** listGeneratedFiles

{- | @GET \/v1beta\/generatedFiles@

Lists the generated files owned by the requesting project.
-}
listGeneratedFiles ::
  ClientRequest ListGeneratedFiles MimeNoContent ListGeneratedFilesResponse MimeJSON
listGeneratedFiles =
  _mkRequest "GET" ["/v1beta/generatedFiles"]

data ListGeneratedFiles

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListGeneratedFiles Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListGeneratedFiles Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListGeneratedFiles PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListGeneratedFiles Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "pageSize" - Optional. Maximum number of `GeneratedFile`s to return per page. If unspecified, defaults to 10. Maximum `page_size` is 50.
instance HasOptionalParam ListGeneratedFiles PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - Optional. A page token from a previous `ListGeneratedFiles` call.
instance HasOptionalParam ListGeneratedFiles PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | @application/json@
instance Produces ListGeneratedFiles MimeJSON

-- *** listModels

{- | @GET \/v1beta\/models@

Lists the [`Model`s](https://ai.google.dev/gemini-api/docs/models/gemini) available through the Gemini API.
-}
listModels ::
  ClientRequest ListModels MimeNoContent ListModelsResponse MimeJSON
listModels =
  _mkRequest "GET" ["/v1beta/models"]

data ListModels

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListModels Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListModels Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListModels PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListModels Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "pageSize" - The maximum number of `Models` to return (per page).  If unspecified, 50 models will be returned per page. This method returns at most 1000 models per page, even if you pass a larger page_size.
instance HasOptionalParam ListModels PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - A page token, received from a previous `ListModels` call.  Provide the `page_token` returned by one request as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to `ListModels` must match the call that provided the page token.
instance HasOptionalParam ListModels PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | @application/json@
instance Produces ListModels MimeJSON

-- *** listOperations

{- | @GET \/v1beta\/tunedModels\/{tunedModel}\/operations@

Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
-}
listOperations ::
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  ClientRequest ListOperations MimeNoContent ListOperationsResponse MimeJSON
listOperations (TunedModel2 tunedModel) =
  _mkRequest "GET" ["/v1beta/tunedModels/", toPath tunedModel, "/operations"]

data ListOperations

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListOperations Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListOperations Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListOperations PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListOperations Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "filter" - The standard list filter.
instance HasOptionalParam ListOperations Filter where
  applyOptionalParam req (Filter xs) =
    req `addQuery` toQuery ("filter", Just xs)

-- | /Optional Param/ "pageSize" - The standard list page size.
instance HasOptionalParam ListOperations PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - The standard list page token.
instance HasOptionalParam ListOperations PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | @application/json@
instance Produces ListOperations MimeJSON

-- *** listOperationsBy

{- | @GET \/v1beta\/batches@

Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
-}
listOperationsBy ::
  ClientRequest ListOperationsBy MimeNoContent ListOperationsResponse MimeJSON
listOperationsBy =
  _mkRequest "GET" ["/v1beta/batches"]

data ListOperationsBy

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListOperationsBy Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListOperationsBy Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListOperationsBy PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListOperationsBy Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "filter" - The standard list filter.
instance HasOptionalParam ListOperationsBy Filter where
  applyOptionalParam req (Filter xs) =
    req `addQuery` toQuery ("filter", Just xs)

-- | /Optional Param/ "pageSize" - The standard list page size.
instance HasOptionalParam ListOperationsBy PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - The standard list page token.
instance HasOptionalParam ListOperationsBy PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | @application/json@
instance Produces ListOperationsBy MimeJSON

-- *** listOperationsByModel

{- | @GET \/v1beta\/models\/{model}\/operations@

Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
-}
listOperationsByModel ::
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest ListOperationsByModel MimeNoContent ListOperationsResponse MimeJSON
listOperationsByModel (Model2 model) =
  _mkRequest "GET" ["/v1beta/models/", toPath model, "/operations"]

data ListOperationsByModel

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListOperationsByModel Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListOperationsByModel Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListOperationsByModel PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListOperationsByModel Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "filter" - The standard list filter.
instance HasOptionalParam ListOperationsByModel Filter where
  applyOptionalParam req (Filter xs) =
    req `addQuery` toQuery ("filter", Just xs)

-- | /Optional Param/ "pageSize" - The standard list page size.
instance HasOptionalParam ListOperationsByModel PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - The standard list page token.
instance HasOptionalParam ListOperationsByModel PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | @application/json@
instance Produces ListOperationsByModel MimeJSON

-- *** listPermissions

{- | @GET \/v1beta\/tunedModels\/{tunedModel}\/permissions@

Lists permissions for the specific resource.
-}
listPermissions ::
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  ClientRequest ListPermissions MimeNoContent ListPermissionsResponse MimeJSON
listPermissions (TunedModel2 tunedModel) =
  _mkRequest "GET" ["/v1beta/tunedModels/", toPath tunedModel, "/permissions"]

data ListPermissions

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListPermissions Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListPermissions Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListPermissions PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListPermissions Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "pageSize" - Optional. The maximum number of `Permission`s to return (per page). The service may return fewer permissions.  If unspecified, at most 10 permissions will be returned. This method returns at most 1000 permissions per page, even if you pass larger page_size.
instance HasOptionalParam ListPermissions PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - Optional. A page token, received from a previous `ListPermissions` call.  Provide the `page_token` returned by one request as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to `ListPermissions` must match the call that provided the page token.
instance HasOptionalParam ListPermissions PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | @application/json@
instance Produces ListPermissions MimeJSON

-- *** listPermissionsByCorpus

{- | @GET \/v1beta\/corpora\/{corpus}\/permissions@

Lists permissions for the specific resource.
-}
listPermissionsByCorpus ::
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  ClientRequest ListPermissionsByCorpus MimeNoContent ListPermissionsResponse MimeJSON
listPermissionsByCorpus (Corpus2 corpus) =
  _mkRequest "GET" ["/v1beta/corpora/", toPath corpus, "/permissions"]

data ListPermissionsByCorpus

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListPermissionsByCorpus Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListPermissionsByCorpus Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListPermissionsByCorpus PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListPermissionsByCorpus Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "pageSize" - Optional. The maximum number of `Permission`s to return (per page). The service may return fewer permissions.  If unspecified, at most 10 permissions will be returned. This method returns at most 1000 permissions per page, even if you pass larger page_size.
instance HasOptionalParam ListPermissionsByCorpus PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - Optional. A page token, received from a previous `ListPermissions` call.  Provide the `page_token` returned by one request as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to `ListPermissions` must match the call that provided the page token.
instance HasOptionalParam ListPermissionsByCorpus PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | @application/json@
instance Produces ListPermissionsByCorpus MimeJSON

-- *** listTunedModels

{- | @GET \/v1beta\/tunedModels@

Lists created tuned models.
-}
listTunedModels ::
  ClientRequest ListTunedModels MimeNoContent ListTunedModelsResponse MimeJSON
listTunedModels =
  _mkRequest "GET" ["/v1beta/tunedModels"]

data ListTunedModels

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam ListTunedModels Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam ListTunedModels Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam ListTunedModels PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam ListTunedModels Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "pageSize" - Optional. The maximum number of `TunedModels` to return (per page). The service may return fewer tuned models.  If unspecified, at most 10 tuned models will be returned. This method returns at most 1000 models per page, even if you pass a larger page_size.
instance HasOptionalParam ListTunedModels PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)

-- | /Optional Param/ "pageToken" - Optional. A page token, received from a previous `ListTunedModels` call.  Provide the `page_token` returned by one request as an argument to the next request to retrieve the next page.  When paginating, all other parameters provided to `ListTunedModels` must match the call that provided the page token.
instance HasOptionalParam ListTunedModels PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("pageToken", Just xs)

-- | /Optional Param/ "filter" - Optional. A filter is a full text search over the tuned model's description and display name. By default, results will not include tuned models shared with everyone.  Additional operators:   - owner:me   - writers:me   - readers:me   - readers:everyone  Examples:   \"owner:me\" returns all tuned models to which caller has owner role   \"readers:me\" returns all tuned models to which caller has reader role   \"readers:everyone\" returns all tuned models that are shared with everyone
instance HasOptionalParam ListTunedModels Filter where
  applyOptionalParam req (Filter xs) =
    req `addQuery` toQuery ("filter", Just xs)

-- | @application/json@
instance Produces ListTunedModels MimeJSON

-- *** predict

{- | @POST \/v1beta\/models\/{model}:predict@

Performs a prediction request.
-}
predict ::
  (Consumes Predict MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest Predict MimeJSON PredictResponse MimeJSON
predict (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":predict"]

data Predict

-- | /Body Param/ "PredictRequest" - The request body.
instance HasBodyParam Predict PredictRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam Predict Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam Predict Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam Predict PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam Predict Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes Predict MimeJSON

-- | @application/json@
instance Produces Predict MimeJSON

-- *** predictLongRunning

{- | @POST \/v1beta\/models\/{model}:predictLongRunning@

Same as Predict but returns an LRO.
-}
predictLongRunning ::
  (Consumes PredictLongRunning MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest PredictLongRunning MimeJSON PredictLongRunningOperation MimeJSON
predictLongRunning (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":predictLongRunning"]

data PredictLongRunning

-- | /Body Param/ "PredictLongRunningRequest" - The request body.
instance HasBodyParam PredictLongRunning PredictLongRunningRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam PredictLongRunning Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam PredictLongRunning Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam PredictLongRunning PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam PredictLongRunning Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes PredictLongRunning MimeJSON

-- | @application/json@
instance Produces PredictLongRunning MimeJSON

-- *** queryCorpus

{- | @POST \/v1beta\/corpora\/{corpus}:query@

Performs semantic search over a `Corpus`.
-}
queryCorpus ::
  (Consumes QueryCorpus MimeJSON) =>
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  ClientRequest QueryCorpus MimeJSON QueryCorpusResponse MimeJSON
queryCorpus (Corpus2 corpus) =
  _mkRequest "POST" ["/v1beta/corpora/", toPath corpus, ":query"]

data QueryCorpus

-- | /Body Param/ "QueryCorpusRequest" - The request body.
instance HasBodyParam QueryCorpus QueryCorpusRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam QueryCorpus Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam QueryCorpus Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam QueryCorpus PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam QueryCorpus Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes QueryCorpus MimeJSON

-- | @application/json@
instance Produces QueryCorpus MimeJSON

-- *** queryDocument

{- | @POST \/v1beta\/corpora\/{corpus}\/documents\/{document}:query@

Performs semantic search over a `Document`.
-}
queryDocument ::
  (Consumes QueryDocument MimeJSON) =>
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "document" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Document2 ->
  ClientRequest QueryDocument MimeJSON QueryDocumentResponse MimeJSON
queryDocument (Corpus2 corpus) (Document2 document) =
  _mkRequest "POST" ["/v1beta/corpora/", toPath corpus, "/documents/", toPath document, ":query"]

data QueryDocument

-- | /Body Param/ "QueryDocumentRequest" - The request body.
instance HasBodyParam QueryDocument QueryDocumentRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam QueryDocument Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam QueryDocument Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam QueryDocument PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam QueryDocument Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes QueryDocument MimeJSON

-- | @application/json@
instance Produces QueryDocument MimeJSON

-- *** streamGenerateContent

{- | @POST \/v1beta\/models\/{model}:streamGenerateContent@

Generates a [streamed response](https://ai.google.dev/gemini-api/docs/text-generation?lang=python#generate-a-text-stream) from the model given an input `GenerateContentRequest`.
-}
streamGenerateContent ::
  (Consumes StreamGenerateContent MimeJSON) =>
  -- | "model" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Model2 ->
  ClientRequest StreamGenerateContent MimeJSON GenerateContentResponse MimeJSON
streamGenerateContent (Model2 model) =
  _mkRequest "POST" ["/v1beta/models/", toPath model, ":streamGenerateContent"]

data StreamGenerateContent

-- | /Body Param/ "GenerateContentRequest" - The request body.
instance HasBodyParam StreamGenerateContent GenerateContentRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam StreamGenerateContent Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam StreamGenerateContent Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam StreamGenerateContent PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam StreamGenerateContent Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes StreamGenerateContent MimeJSON

-- | @application/json@
instance Produces StreamGenerateContent MimeJSON

-- *** streamGenerateContentByDynamicId

{- | @POST \/v1beta\/dynamic\/{dynamicId}:streamGenerateContent@

Generates a [streamed response](https://ai.google.dev/gemini-api/docs/text-generation?lang=python#generate-a-text-stream) from the model given an input `GenerateContentRequest`.
-}
streamGenerateContentByDynamicId ::
  (Consumes StreamGenerateContentByDynamicId MimeJSON) =>
  -- | "dynamicId" -  Part of `model`. Required. The name of the `Model` to use for generating the completion.  Format: `models/{model}`.
  DynamicId ->
  ClientRequest StreamGenerateContentByDynamicId MimeJSON GenerateContentResponse MimeJSON
streamGenerateContentByDynamicId (DynamicId dynamicId) =
  _mkRequest "POST" ["/v1beta/dynamic/", toPath dynamicId, ":streamGenerateContent"]

data StreamGenerateContentByDynamicId

-- | /Body Param/ "GenerateContentRequest" - The request body.
instance HasBodyParam StreamGenerateContentByDynamicId GenerateContentRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam StreamGenerateContentByDynamicId Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam StreamGenerateContentByDynamicId Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam StreamGenerateContentByDynamicId PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam StreamGenerateContentByDynamicId Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes StreamGenerateContentByDynamicId MimeJSON

-- | @application/json@
instance Produces StreamGenerateContentByDynamicId MimeJSON

-- *** streamGenerateContentByTunedModel

{- | @POST \/v1beta\/tunedModels\/{tunedModel}:streamGenerateContent@

Generates a [streamed response](https://ai.google.dev/gemini-api/docs/text-generation?lang=python#generate-a-text-stream) from the model given an input `GenerateContentRequest`.
-}
streamGenerateContentByTunedModel ::
  (Consumes StreamGenerateContentByTunedModel MimeJSON) =>
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  ClientRequest StreamGenerateContentByTunedModel MimeJSON GenerateContentResponse MimeJSON
streamGenerateContentByTunedModel (TunedModel2 tunedModel) =
  _mkRequest "POST" ["/v1beta/tunedModels/", toPath tunedModel, ":streamGenerateContent"]

data StreamGenerateContentByTunedModel

-- | /Body Param/ "GenerateContentRequest" - The request body.
instance HasBodyParam StreamGenerateContentByTunedModel GenerateContentRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam StreamGenerateContentByTunedModel Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam StreamGenerateContentByTunedModel Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam StreamGenerateContentByTunedModel PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam StreamGenerateContentByTunedModel Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes StreamGenerateContentByTunedModel MimeJSON

-- | @application/json@
instance Produces StreamGenerateContentByTunedModel MimeJSON

-- *** transferOwnership

{- | @POST \/v1beta\/tunedModels\/{tunedModel}:transferOwnership@

Transfers ownership of the tuned model. This is the only way to change ownership of the tuned model. The current owner will be downgraded to writer role.
-}
transferOwnership ::
  (Consumes TransferOwnership MimeJSON) =>
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  ClientRequest TransferOwnership MimeJSON A.Value MimeJSON
transferOwnership (TunedModel2 tunedModel) =
  _mkRequest "POST" ["/v1beta/tunedModels/", toPath tunedModel, ":transferOwnership"]

data TransferOwnership

-- | /Body Param/ "TransferOwnershipRequest" - The request body.
instance HasBodyParam TransferOwnership TransferOwnershipRequest

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam TransferOwnership Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam TransferOwnership Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam TransferOwnership PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam TransferOwnership Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes TransferOwnership MimeJSON

-- | @application/json@
instance Produces TransferOwnership MimeJSON

-- *** updateCachedContent

{- | @PATCH \/v1beta\/cachedContents\/{id}@

Updates CachedContent resource (only expiration is updatable).
-}
updateCachedContent ::
  (Consumes UpdateCachedContent MimeJSON) =>
  -- | "id" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Id ->
  ClientRequest UpdateCachedContent MimeJSON CachedContent MimeJSON
updateCachedContent (Id id) =
  _mkRequest "PATCH" ["/v1beta/cachedContents/", toPath id]

data UpdateCachedContent

-- | /Body Param/ "CachedContent" - Required. The content cache entry to update
instance HasBodyParam UpdateCachedContent CachedContent

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam UpdateCachedContent Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam UpdateCachedContent Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam UpdateCachedContent PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam UpdateCachedContent Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "updateMask" - The list of fields to update.
instance HasOptionalParam UpdateCachedContent UpdateMask where
  applyOptionalParam req (UpdateMask xs) =
    req `addQuery` toQuery ("updateMask", Just xs)

-- | @application/json@
instance Consumes UpdateCachedContent MimeJSON

-- | @application/json@
instance Produces UpdateCachedContent MimeJSON

-- *** updateChunk

{- | @PATCH \/v1beta\/corpora\/{corpus}\/documents\/{document}\/chunks\/{chunk}@

Updates a `Chunk`.
-}
updateChunk ::
  (Consumes UpdateChunk MimeJSON) =>
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "document" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Document2 ->
  -- | "chunk2" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Chunk2 ->
  -- | "updateMask" -  Required. The list of fields to update. Currently, this only supports updating `custom_metadata` and `data`.
  UpdateMask ->
  ClientRequest UpdateChunk MimeJSON Chunk MimeJSON
updateChunk (Corpus2 corpus) (Document2 document) (Chunk2 chunk2) (UpdateMask updateMask) =
  _mkRequest "PATCH" ["/v1beta/corpora/", toPath corpus, "/documents/", toPath document, "/chunks/", toPath chunk2]
    `addQuery` toQuery ("updateMask", Just updateMask)

data UpdateChunk

-- | /Body Param/ "Chunk" - Required. The `Chunk` to update.
instance HasBodyParam UpdateChunk Chunk

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam UpdateChunk Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam UpdateChunk Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam UpdateChunk PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam UpdateChunk Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes UpdateChunk MimeJSON

-- | @application/json@
instance Produces UpdateChunk MimeJSON

-- *** updateCorpus

{- | @PATCH \/v1beta\/corpora\/{corpus}@

Updates a `Corpus`.
-}
updateCorpus ::
  (Consumes UpdateCorpus MimeJSON) =>
  -- | "corpus2" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "updateMask" -  Required. The list of fields to update. Currently, this only supports updating `display_name`.
  UpdateMask ->
  ClientRequest UpdateCorpus MimeJSON Corpus MimeJSON
updateCorpus (Corpus2 corpus2) (UpdateMask updateMask) =
  _mkRequest "PATCH" ["/v1beta/corpora/", toPath corpus2]
    `addQuery` toQuery ("updateMask", Just updateMask)

data UpdateCorpus

-- | /Body Param/ "Corpus" - Required. The `Corpus` to update.
instance HasBodyParam UpdateCorpus Corpus

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam UpdateCorpus Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam UpdateCorpus Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam UpdateCorpus PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam UpdateCorpus Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes UpdateCorpus MimeJSON

-- | @application/json@
instance Produces UpdateCorpus MimeJSON

-- *** updateDocument

{- | @PATCH \/v1beta\/corpora\/{corpus}\/documents\/{document}@

Updates a `Document`.
-}
updateDocument ::
  (Consumes UpdateDocument MimeJSON) =>
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "document2" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Document2 ->
  -- | "updateMask" -  Required. The list of fields to update. Currently, this only supports updating `display_name` and `custom_metadata`.
  UpdateMask ->
  ClientRequest UpdateDocument MimeJSON Document MimeJSON
updateDocument (Corpus2 corpus) (Document2 document2) (UpdateMask updateMask) =
  _mkRequest "PATCH" ["/v1beta/corpora/", toPath corpus, "/documents/", toPath document2]
    `addQuery` toQuery ("updateMask", Just updateMask)

data UpdateDocument

-- | /Body Param/ "Document" - Required. The `Document` to update.
instance HasBodyParam UpdateDocument Document

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam UpdateDocument Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam UpdateDocument Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam UpdateDocument PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam UpdateDocument Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes UpdateDocument MimeJSON

-- | @application/json@
instance Produces UpdateDocument MimeJSON

-- *** updatePermission

{- | @PATCH \/v1beta\/tunedModels\/{tunedModel}\/permissions\/{permission}@

Updates the permission.
-}
updatePermission ::
  (Consumes UpdatePermission MimeJSON) =>
  -- | "tunedModel" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  -- | "permission2" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Permission2 ->
  -- | "updateMask" -  Required. The list of fields to update. Accepted ones:  - role (`Permission.role` field)
  UpdateMask ->
  ClientRequest UpdatePermission MimeJSON Permission MimeJSON
updatePermission (TunedModel2 tunedModel) (Permission2 permission2) (UpdateMask updateMask) =
  _mkRequest "PATCH" ["/v1beta/tunedModels/", toPath tunedModel, "/permissions/", toPath permission2]
    `addQuery` toQuery ("updateMask", Just updateMask)

data UpdatePermission

-- | /Body Param/ "Permission" - Required. The permission to update.  The permission's `name` field is used to identify the permission to update.
instance HasBodyParam UpdatePermission Permission

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam UpdatePermission Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam UpdatePermission Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam UpdatePermission PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam UpdatePermission Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes UpdatePermission MimeJSON

-- | @application/json@
instance Produces UpdatePermission MimeJSON

-- *** updatePermissionByCorpusAndPermission

{- | @PATCH \/v1beta\/corpora\/{corpus}\/permissions\/{permission}@

Updates the permission.
-}
updatePermissionByCorpusAndPermission ::
  (Consumes UpdatePermissionByCorpusAndPermission MimeJSON) =>
  -- | "corpus" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Corpus2 ->
  -- | "permission2" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  Permission2 ->
  -- | "updateMask" -  Required. The list of fields to update. Accepted ones:  - role (`Permission.role` field)
  UpdateMask ->
  ClientRequest UpdatePermissionByCorpusAndPermission MimeJSON Permission MimeJSON
updatePermissionByCorpusAndPermission (Corpus2 corpus) (Permission2 permission2) (UpdateMask updateMask) =
  _mkRequest "PATCH" ["/v1beta/corpora/", toPath corpus, "/permissions/", toPath permission2]
    `addQuery` toQuery ("updateMask", Just updateMask)

data UpdatePermissionByCorpusAndPermission

-- | /Body Param/ "Permission" - Required. The permission to update.  The permission's `name` field is used to identify the permission to update.
instance HasBodyParam UpdatePermissionByCorpusAndPermission Permission

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam UpdatePermissionByCorpusAndPermission Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam UpdatePermissionByCorpusAndPermission Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam UpdatePermissionByCorpusAndPermission PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam UpdatePermissionByCorpusAndPermission Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | @application/json@
instance Consumes UpdatePermissionByCorpusAndPermission MimeJSON

-- | @application/json@
instance Produces UpdatePermissionByCorpusAndPermission MimeJSON

-- *** updateTunedModel

{- | @PATCH \/v1beta\/tunedModels\/{tunedModel}@

Updates a tuned model.
-}
updateTunedModel ::
  (Consumes UpdateTunedModel MimeJSON) =>
  -- | "tunedModel2" -  Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
  TunedModel2 ->
  ClientRequest UpdateTunedModel MimeJSON TunedModel MimeJSON
updateTunedModel (TunedModel2 tunedModel2) =
  _mkRequest "PATCH" ["/v1beta/tunedModels/", toPath tunedModel2]

data UpdateTunedModel

-- | /Body Param/ "TunedModel" - Required. The tuned model to update.
instance HasBodyParam UpdateTunedModel TunedModel

-- | /Optional Param/ "$alt" - Data format for response.
instance HasOptionalParam UpdateTunedModel Alt where
  applyOptionalParam req (Alt xs) =
    req `addQuery` toQuery ("$alt", Just xs)

-- | /Optional Param/ "$callback" - JSONP
instance HasOptionalParam UpdateTunedModel Callback where
  applyOptionalParam req (Callback xs) =
    req `addQuery` toQuery ("$callback", Just xs)

-- | /Optional Param/ "$prettyPrint" - Returns response with indentations and line breaks.
instance HasOptionalParam UpdateTunedModel PrettyPrint where
  applyOptionalParam req (PrettyPrint xs) =
    req `addQuery` toQuery ("$prettyPrint", Just xs)

-- | /Optional Param/ "$.xgafv" - V1 error format.
instance HasOptionalParam UpdateTunedModel Xgafv where
  applyOptionalParam req (Xgafv xs) =
    req `addQuery` toQuery ("$.xgafv", Just xs)

-- | /Optional Param/ "updateMask" - Optional. The list of fields to update.
instance HasOptionalParam UpdateTunedModel UpdateMask where
  applyOptionalParam req (UpdateMask xs) =
    req `addQuery` toQuery ("updateMask", Just xs)

-- | @application/json@
instance Consumes UpdateTunedModel MimeJSON

-- | @application/json@
instance Produces UpdateTunedModel MimeJSON
